{
    "swagger": "2.0",
    "info": {
        "title": "Simple Store API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/admin/categories/": {
            "get": {
                "tags": [
                    "admin/categories"
                ],
                "summary": "Get All Categories",
                "description": "get all categories",
                "operationId": "CategoryAdminController.Get All Categories",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of this request",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "page of this request",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "admin/categories"
                ],
                "summary": "Create Category",
                "description": "create category",
                "operationId": "CategoryAdminController.Create Category",
                "parameters": [
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/categories/{categoryID}": {
            "get": {
                "tags": [
                    "admin/categories"
                ],
                "summary": "Get Category",
                "description": "Get category",
                "operationId": "CategoryAdminController.Get Category",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryID",
                        "description": "id of the category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "put": {
                "tags": [
                    "admin/categories"
                ],
                "summary": "Update Category",
                "description": "update category",
                "operationId": "CategoryAdminController.Update Category",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryID",
                        "description": "id of the category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin/categories"
                ],
                "summary": "Delete Category",
                "description": "delete category",
                "operationId": "CategoryAdminController.Delete Category",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryID",
                        "description": "id of the category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/products/": {
            "get": {
                "tags": [
                    "admin/products"
                ],
                "summary": "Get All Products",
                "description": "get all products",
                "operationId": "ProductAdminController.Get All Products",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of this request",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "page of this request",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "admin/products"
                ],
                "summary": "Create Product",
                "description": "create product",
                "operationId": "ProductAdminController.Create Product",
                "parameters": [
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/products/{productID}": {
            "get": {
                "tags": [
                    "admin/products"
                ],
                "summary": "Get Product",
                "description": "Get product",
                "operationId": "ProductAdminController.Get Product",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productID",
                        "description": "id of the product to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "put": {
                "tags": [
                    "admin/products"
                ],
                "summary": "Update Product",
                "description": "update product",
                "operationId": "ProductAdminController.Update Product",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productID",
                        "description": "id of the product to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin/products"
                ],
                "summary": "Delete Product",
                "description": "delete product",
                "operationId": "ProductAdminController.Delete Product",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productID",
                        "description": "id of the product to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/variants/": {
            "get": {
                "tags": [
                    "admin/variants"
                ],
                "summary": "Get All Variants",
                "description": "get all variants",
                "operationId": "VariantAdminController.Get All Variants",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of this request",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "page of this request",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "admin/variants"
                ],
                "summary": "Create Variant",
                "description": "create variant",
                "operationId": "VariantAdminController.Create Variant",
                "parameters": [
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Variant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/variants/{variantID}": {
            "get": {
                "tags": [
                    "admin/variants"
                ],
                "summary": "Get Variant",
                "description": "Get variant",
                "operationId": "VariantAdminController.Get Variant",
                "parameters": [
                    {
                        "in": "path",
                        "name": "variantID",
                        "description": "id of the variant to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "put": {
                "tags": [
                    "admin/variants"
                ],
                "summary": "Update Variant",
                "description": "update variant",
                "operationId": "VariantAdminController.Update Variant",
                "parameters": [
                    {
                        "in": "path",
                        "name": "variantID",
                        "description": "id of the variant to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Variant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin/variants"
                ],
                "summary": "Delete Variant",
                "description": "delete variant",
                "operationId": "VariantAdminController.Delete Variant",
                "parameters": [
                    {
                        "in": "path",
                        "name": "variantID",
                        "description": "id of the variant to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/public/categories/": {
            "get": {
                "tags": [
                    "public/categories"
                ],
                "summary": "Get All Categories",
                "description": "get only the active categories",
                "operationId": "CategoryPublicController.Get All Categories",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of this request",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "page of this request",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/public/metadata/": {
            "get": {
                "tags": [
                    "public/metadata"
                ],
                "summary": "get all metadata",
                "description": "get all metadata",
                "operationId": "MetadataPublicController.GetAll",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "limit of this request",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "page of this request",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/public/users/login": {
            "post": {
                "tags": [
                    "public/users"
                ],
                "summary": "login",
                "description": "login",
                "operationId": "UserPublicController.Login",
                "parameters": [
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datatransfers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/public/users/register": {
            "post": {
                "tags": [
                    "public/users"
                ],
                "summary": "register",
                "description": "register",
                "operationId": "UserPublicController.Register",
                "parameters": [
                    {
                        "in": "body",
                        "name": "params",
                        "description": "body of this request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datatransfers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "datatransfers.LoginRequest": {
            "title": "LoginRequest",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "datatransfers.RegisterRequest": {
            "title": "RegisterRequest",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "title": "DeletedAt",
            "type": "object"
        },
        "models.Category": {
            "title": "Category",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "sort": {
                    "type": "integer",
                    "format": "int64"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Price": {
            "title": "Price",
            "type": "object",
            "properties": {
                "VariantID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "currency": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isActive": {
                    "type": "boolean"
                },
                "nominal": {
                    "type": "number",
                    "format": "float"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "variant": {
                    "$ref": "#/definitions/models.Variant"
                }
            }
        },
        "models.Product": {
            "title": "Product",
            "type": "object",
            "properties": {
                "CategoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "createdAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sort": {
                    "type": "integer",
                    "format": "int64"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Variant"
                    }
                }
            }
        },
        "models.Variant": {
            "title": "Variant",
            "type": "object",
            "properties": {
                "ProductID": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Price"
                    }
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "sort": {
                    "type": "integer",
                    "format": "int64"
                },
                "stock": {
                    "type": "integer",
                    "format": "int64"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        }
    },
    "tags": [
        {
            "name": "public/metadata",
            "description": "Operations about object\n"
        },
        {
            "name": "public/categories",
            "description": "Operations about object\n"
        },
        {
            "name": "public/users",
            "description": "Operations about object\n"
        },
        {
            "name": "admin/categories",
            "description": "Operations about object\n"
        },
        {
            "name": "admin/products",
            "description": "Operations about object\n"
        },
        {
            "name": "admin/variants",
            "description": "Operations about object\n"
        }
    ]
}