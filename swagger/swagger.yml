swagger: "2.0"
info:
  title: Simple Store API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /admin/categories/:
    get:
      tags:
      - admin/categories
      summary: Get All Categories
      description: get all categories
      operationId: CategoryAdminController.Get All Categories
      parameters:
      - in: query
        name: limit
        description: limit of this request
        type: integer
        format: int64
      - in: query
        name: page
        description: page of this request
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "403":
          description: ""
    post:
      tags:
      - admin/categories
      summary: Create Category
      description: create category
      operationId: CategoryAdminController.Create Category
      parameters:
      - in: body
        name: params
        description: body of this request
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /admin/categories/{categoryID}:
    get:
      tags:
      - admin/categories
      summary: Get Category
      description: Get category
      operationId: CategoryAdminController.Get Category
      parameters:
      - in: path
        name: categoryID
        description: id of the category to update
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "403":
          description: ""
    put:
      tags:
      - admin/categories
      summary: Update Category
      description: update category
      operationId: CategoryAdminController.Update Category
      parameters:
      - in: path
        name: categoryID
        description: id of the category to update
        required: true
        type: integer
        format: int64
      - in: body
        name: params
        description: body of this request
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      responses:
        "200":
          description: ""
        "403":
          description: ""
    delete:
      tags:
      - admin/categories
      summary: Delete Category
      description: delete category
      operationId: CategoryAdminController.Delete Category
      parameters:
      - in: path
        name: categoryID
        description: id of the category to update
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /public/categories/:
    get:
      tags:
      - public/categories
      summary: Get All Categories
      description: get only the active categories
      operationId: CategoryPublicController.Get All Categories
      parameters:
      - in: query
        name: limit
        description: limit of this request
        type: integer
        format: int64
      - in: query
        name: page
        description: page of this request
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /public/metadata/:
    get:
      tags:
      - public/metadata
      summary: get all metadata
      description: get all metadata
      operationId: MetadataPublicController.GetAll
      parameters:
      - in: query
        name: limit
        description: limit of this request
        type: integer
        format: int64
      - in: query
        name: page
        description: page of this request
        type: integer
        format: int64
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /public/users/login:
    post:
      tags:
      - public/users
      summary: login
      description: login
      operationId: UserPublicController.Login
      parameters:
      - in: body
        name: params
        description: body of this request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ""
        "403":
          description: ""
  /public/users/register:
    post:
      tags:
      - public/users
      summary: register
      description: register
      operationId: UserPublicController.Register
      parameters:
      - in: body
        name: params
        description: body of this request
        required: true
        schema:
          $ref: '#/definitions/datatransfers.RegisterRequest'
      responses:
        "200":
          description: ""
        "403":
          description: ""
definitions:
  datatransfers.RegisterRequest:
    title: RegisterRequest
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
  gorm.DeletedAt:
    title: DeletedAt
    type: object
  models.Category:
    title: Category
    type: object
    properties:
      createdAt:
        type: string
        format: datetime
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
        format: int32
      image:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      products:
        type: array
        items:
          $ref: '#/definitions/models.Product'
      sort:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: datetime
  models.Price:
    title: Price
    type: object
    properties:
      VariantID:
        type: integer
        format: int32
      createdAt:
        type: string
        format: datetime
      currency:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
        format: int32
      isActive:
        type: boolean
      nominal:
        type: number
        format: float
      updatedAt:
        type: string
        format: datetime
      variant:
        $ref: '#/definitions/models.Variant'
  models.Product:
    title: Product
    type: object
    properties:
      CategoryID:
        type: integer
        format: int32
      category:
        $ref: '#/definitions/models.Category'
      createdAt:
        type: string
        format: datetime
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
        format: int32
      image:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      sort:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: datetime
      variants:
        type: array
        items:
          $ref: '#/definitions/models.Variant'
  models.User:
    title: User
    type: object
    properties:
      createdAt:
        type: string
        format: datetime
      email:
        type: string
      id:
        type: integer
        format: int32
      password:
        type: string
      token:
        type: string
      updatedAt:
        type: string
        format: datetime
      username:
        type: string
  models.Variant:
    title: Variant
    type: object
    properties:
      ProductID:
        type: integer
        format: int32
      createdAt:
        type: string
        format: datetime
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
        format: int32
      image:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      prices:
        type: array
        items:
          $ref: '#/definitions/models.Price'
      product:
        $ref: '#/definitions/models.Product'
      sort:
        type: integer
        format: int64
      stock:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: datetime
tags:
- name: public/metadata
  description: |
    Operations about object
- name: public/categories
  description: |
    Operations about object
- name: public/users
  description: |
    Operations about object
- name: admin/categories
  description: |
    Operations about object
